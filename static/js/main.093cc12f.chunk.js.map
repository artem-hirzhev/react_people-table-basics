{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","components/HeaderLink.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","classNames","sex","style","color","name","PeopleTable","people","handleParentCellContent","parentName","parent","find","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useParams","useEffect","catch","finally","noPeopleWarning","length","HeaderLink","text","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.093cc12f.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\nexport type Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    style={person.sex === 'f' ? { color: 'red' } : {}}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  slug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => {\n  const handleParentCellContent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (parentName && parent) {\n      return (\n        <PersonLink person={parent} />\n      );\n    }\n\n    if (parentName && !parent) {\n      return parentName;\n    }\n\n    return '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames(\n              {\n                'has-background-warning': person.slug === slug,\n              },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{handleParentCellContent(person.motherName)}</td>\n            <td>{handleParentCellContent(person.fatherName)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const noPeopleWarning = !people.length && !error && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {noPeopleWarning && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {(people.length > 0 && !isLoading) && (\n            <PeopleTable people={people} slug={slug} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const HeaderLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HeaderLink } from './components/HeaderLink';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <HeaderLink to=\"/\" text=\"Home\" />\n\n          <HeaderLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}